<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="22" passed="15" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-22T21:12:37 EET" name="RegressionSuite" finished-at="2023-01-22T21:12:37 EET" duration-ms="150">
    <groups>
      <group name="test_username">
        <method signature="LoginTest.testLoginUsername(java.lang.String,java.lang.String)[pri:1, instance:org.internship.LoginTest@5be6e01c]" name="testLoginUsername" class="org.internship.LoginTest"/>
      </group> <!-- test_username -->
      <group name="test_password">
        <method signature="LoginTest.testLoginPassword(java.lang.String,java.lang.String)[pri:2, instance:org.internship.LoginTest@5be6e01c]" name="testLoginPassword" class="org.internship.LoginTest"/>
      </group> <!-- test_password -->
    </groups>
    <test started-at="2023-01-22T21:12:37 EET" name="Calculator Test" finished-at="2023-01-22T21:12:37 EET" duration-ms="79">
      <class name="org.internship.CalculatorTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="beforeTest" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="beforeClass" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCalculator(int,int,int)[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculator" description="This test method test the Calculator sum method with different values" data-provider="calculatorTestData" finished-at="2023-01-22T21:12:37 EET" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculator -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCalculator(int,int,int)[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculator" description="This test method test the Calculator sum method with different values" data-provider="calculatorTestData" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculator -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testCalculator(int,int,int)[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculator" description="This test method test the Calculator sum method with different values" data-provider="calculatorTestData" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculator -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCalculator(int,int,int)[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculator" description="This test method test the Calculator sum method with different values" data-provider="calculatorTestData" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculator -->
        <test-method signature="testCalculator(int,int,int)[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculator" description="This test method test the Calculator sum method with different values" data-provider="calculatorTestData" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculator -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCalculator(int,int,int)[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculator" description="This test method test the Calculator sum method with different values" data-provider="calculatorTestData" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculator -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testCalculatorSoftAssert(int,int,int)[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculatorSoftAssert" description="This test method test the Calculator sum method with different values" data-provider="calculatorTestData" finished-at="2023-01-22T21:12:37 EET" duration-ms="10" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Intentionally failed! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Intentionally failed! expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at org.internship.CalculatorTest.testCalculatorSoftAssert(CalculatorTest.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)
at org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)
at org.testng.internal.invokers.InvokeMethodRunnable.run(InvokeMethodRunnable.java:33)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:345)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:301)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorSoftAssert -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCalculatorSoftAssert(int,int,int)[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculatorSoftAssert" description="This test method test the Calculator sum method with different values" data-provider="calculatorTestData" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-6]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Intentionally failed! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Intentionally failed! expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at org.internship.CalculatorTest.testCalculatorSoftAssert(CalculatorTest.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)
at org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)
at org.testng.internal.invokers.InvokeMethodRunnable.run(InvokeMethodRunnable.java:33)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:345)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:301)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorSoftAssert -->
        <test-method signature="testCalculatorSoftAssert(int,int,int)[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculatorSoftAssert" description="This test method test the Calculator sum method with different values" data-provider="calculatorTestData" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Intentionally failed! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Intentionally failed! expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at org.internship.CalculatorTest.testCalculatorSoftAssert(CalculatorTest.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)
at org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)
at org.testng.internal.invokers.InvokeMethodRunnable.run(InvokeMethodRunnable.java:33)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:345)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:301)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorSoftAssert -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testCalculatorSoftAssert(int,int,int)[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculatorSoftAssert" description="This test method test the Calculator sum method with different values" data-provider="calculatorTestData" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Intentionally failed! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Intentionally failed! expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at org.internship.CalculatorTest.testCalculatorSoftAssert(CalculatorTest.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)
at org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)
at org.testng.internal.invokers.InvokeMethodRunnable.run(InvokeMethodRunnable.java:33)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:345)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:301)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorSoftAssert -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCalculatorSoftAssert(int,int,int)[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculatorSoftAssert" description="This test method test the Calculator sum method with different values" data-provider="calculatorTestData" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Intentionally failed! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Intentionally failed! expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at org.internship.CalculatorTest.testCalculatorSoftAssert(CalculatorTest.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)
at org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)
at org.testng.internal.invokers.InvokeMethodRunnable.run(InvokeMethodRunnable.java:33)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:345)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:301)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorSoftAssert -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCalculatorSoftAssert(int,int,int)[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculatorSoftAssert" description="This test method test the Calculator sum method with different values" data-provider="calculatorTestData" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Intentionally failed! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Intentionally failed! expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at org.internship.CalculatorTest.testCalculatorSoftAssert(CalculatorTest.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)
at org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)
at org.testng.internal.invokers.InvokeMethodRunnable.run(InvokeMethodRunnable.java:33)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:345)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:301)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorSoftAssert -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testCalculatorWithPrivate()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="testCalculatorWithPrivate" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorWithPrivate -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="afterClass" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="tearDown" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="afterTest" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- org.internship.CalculatorTest -->
    </test> <!-- Calculator Test -->
    <test started-at="2023-01-22T21:12:37 EET" name="Login Test" finished-at="2023-01-22T21:12:37 EET" duration-ms="28">
      <class name="org.internship.CalculatorTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="beforeSuite" finished-at="2023-01-22T21:12:37 EET" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:org.internship.CalculatorTest@56de5251]" started-at="2023-01-22T21:12:37 EET" name="afterSuite" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- org.internship.CalculatorTest -->
      <class name="org.internship.LoginTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="beforeClass" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginUsername(java.lang.String,java.lang.String)[pri:1, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="testLoginUsername" description="This method will test Login Username" data-provider="test_username" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[adrian_macovei]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[The username was set correctly.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="tearDown" description="Tear Down for all LoginTest methods" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testLoginUsername(java.lang.String,java.lang.String)[pri:1, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="testLoginUsername" description="This method will test Login Username" data-provider="test_username" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[adrianm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[The username need to have 8 or more characters.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginUsername -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="tearDown" description="Tear Down for all LoginTest methods" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testLoginPassword(java.lang.String,java.lang.String)[pri:2, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="testLoginPassword" description="This method will test Login Password" data-provider="test_password" finished-at="2023-01-22T21:12:37 EET" depends-on-methods="org.internship.LoginTest.testLoginUsername" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Something1!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password is valid and was set to your account.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginPassword -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginPassword(java.lang.String,java.lang.String)[pri:2, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="testLoginPassword" description="This method will test Login Password" data-provider="test_password" finished-at="2023-01-22T21:12:37 EET" depends-on-methods="org.internship.LoginTest.testLoginUsername" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[somepas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[New password need to have at least 8 characters]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginPassword -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="tearDown" description="Tear Down for all LoginTest methods" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="tearDown" description="Tear Down for all LoginTest methods" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testLoginPassword(java.lang.String,java.lang.String)[pri:2, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="testLoginPassword" description="This method will test Login Password" data-provider="test_password" finished-at="2023-01-22T21:12:37 EET" depends-on-methods="org.internship.LoginTest.testLoginUsername" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[password12!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[New password need to have at least one uppercase letter]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginPassword -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="tearDown" description="Tear Down for all LoginTest methods" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginPassword(java.lang.String,java.lang.String)[pri:2, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="testLoginPassword" description="This method will test Login Password" data-provider="test_password" finished-at="2023-01-22T21:12:37 EET" depends-on-methods="org.internship.LoginTest.testLoginUsername" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Password12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[New password need to contain a special character]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginPassword -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="tearDown" description="Tear Down for all LoginTest methods" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testLoginPassword(java.lang.String,java.lang.String)[pri:2, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="testLoginPassword" description="This method will test Login Password" data-provider="test_password" finished-at="2023-01-22T21:12:37 EET" depends-on-methods="org.internship.LoginTest.testLoginUsername" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Password!@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[New password need to have at least one numerical character]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginPassword -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="setUp" finished-at="2023-01-22T21:12:37 EET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="tearDown" description="Tear Down for all LoginTest methods" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testLoginPassword(java.lang.String,java.lang.String)[pri:2, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="testLoginPassword" description="This method will test Login Password" data-provider="test_password" finished-at="2023-01-22T21:12:37 EET" depends-on-methods="org.internship.LoginTest.testLoginUsername" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Aadrian_macovei!1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[New password need to not contain username]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginPassword -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="afterClass" finished-at="2023-01-22T21:12:37 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.internship.LoginTest@5be6e01c]" started-at="2023-01-22T21:12:37 EET" name="tearDown" description="Tear Down for all LoginTest methods" finished-at="2023-01-22T21:12:37 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.internship.LoginTest -->
    </test> <!-- Login Test -->
  </suite> <!-- RegressionSuite -->
</testng-results>
